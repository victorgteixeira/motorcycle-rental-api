services:
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=Moto
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Moto"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q status"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build:
      context: ./src/Moto.Rentals.Api
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=Moto;Username=postgres;Password=postgres
      - Rabbit__Host=rabbitmq
      - Rabbit__User=guest
      - Rabbit__Pass=guest
      - Storage__CnhRoot=/app/storage/cnh
    ports:
      - "8080:8080"
    volumes:
      - cnh_storage:/app/storage/cnh

volumes:
  pgdata:
  cnh_storage:
